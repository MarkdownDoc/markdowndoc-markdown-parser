{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;wBAAiB,WAAW;;;;2BACX,cAAc;;;;0BACR,aAAa;;;;kCACf,sBAAsB;;;;oCACpB,wBAAwB;;;;qBAEhC,UAAU,OAAO,EAAE,QAAQ,EAAE;AAC1C,WAAS,iBAAiB,CAAC,GAAG,EAAE,IAAI,EAAE;AACpC,QAAI,OAAO,CAAC,SAAS,EAAE;AACrB,aAAO,EAAE,CAAC;KACX;;AAED,QAAI,IAAI,IAAI,yBAAK,WAAW,CAAC,IAAI,CAAC,EAAE;AAClC,UAAI;AACF,eAAO,yBAAK,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;OACxC,CAAC,OAAO,EAAE,EAAE;AACX,eAAO,EAAE,CAAC;OACX;KACF;;AAED,QAAI;AACF,aAAO,yBAAK,aAAa,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;KACtC,CAAC,OAAO,EAAE,EAAE;AACX,aAAO,EAAE,CAAC;KACX;GACF;;AAED,WAAS,QAAQ,GAAG;AAClB,QAAM,EAAE,GAAG,4BAAe;AACxB,eAAS,EAAE,mBAAC,GAAG,EAAE,IAAI,EAAK;AACxB,eAAO,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;OAC9C;KACF,CAAC,CAAC;;AAEH,QAAI,OAAO,CAAC,UAAU,EAAE;AACtB,QAAE,CAAC,GAAG,mCAAY,CAAC;KACpB;;AAED,QAAI,OAAO,CAAC,QAAQ,EAAE;AACpB,QAAE,CAAC,GAAG,iCAAU,CAAC;KAClB;;AAED,WAAO,EAAE,CAAC;GACX;;AAED,WAAS,UAAU,GAAG;AACpB,QAAM,EAAE,GAAG,QAAQ,EAAE,CAAC;AACtB,QAAM,IAAI,GAAG,sBAAK,IAAI,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;;AAEvD,WAAO,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;GAC9C;;AAED,SAAO,UAAU,EAAE,CAAC;CACrB","file":"index.js","sourcesContent":["import read from 'read-file';\nimport hljs from 'highlight.js';\nimport MarkdownIt from 'markdown-it';\nimport checkbox from 'markdown-it-checkbox';\nimport linkscheme from 'markdown-it-linkscheme';\n\nexport default function (options, filepath) {\n  function markdownHighlight(str, lang) {\n    if (options.highlight) {\n      return '';\n    }\n\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return hljs.highlight(lang, str).value;\n      } catch (__) {\n        return ''; // use external default escaping\n      }\n    }\n\n    try {\n      return hljs.highlightAuto(str).value;\n    } catch (__) {\n      return ''; // use external default escaping\n    }\n  }\n\n  function markdown() {\n    const md = new MarkdownIt({\n      highlight: (str, lang) => {\n        return markdownHighlight(options, str, lang);\n      },\n    });\n\n    if (options.linkscheme) {\n      md.use(linkscheme);\n    }\n\n    if (options.checkbox) {\n      md.use(checkbox);\n    }\n\n    return md;\n  }\n\n  function renderHtml() {\n    const md = markdown();\n    const file = read.sync(filepath, { encoding: 'utf8' });\n\n    return md.render(file, { encoding: 'utf8' });\n  }\n\n  return renderHtml();\n}\n"]}